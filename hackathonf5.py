# -*- coding: utf-8 -*-
"""Hackathonf5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ix5-hFa1q0AQ6NrxjGSCqpdnsTCS-Ag0

# Hackathon Fase 5

Instalacao das bibliotecas necessarias
"""

!pip install roboflow ultralytics google-genai

"""Imports"""

from google import genai
from google.genai import types
from roboflow import Roboflow

from IPython.display import Markdown, display
import textwrap

"""Descarregando dataset com roboflow"""

rf = Roboflow(api_key="tlrHdqUo5fHswJcG1iG5")
project = rf.workspace("arilson1").project("software_architeture_fiap")
version = project.version(1)
dataset = version.download("yolov11")

"""Carregando modelo base"""

from ultralytics import YOLO
model = YOLO('yolo11s.pt')

"""Treinamento do modelo"""

data_path = "/content/software_architeture_fiap-1/data.yaml"
results = model.train(data=data_path, epochs=25, imgsz=640)

"""Fazendo as predicoes"""

custom_model = YOLO('/content/runs/detect/train/weights/best.pt')

imagem = 'Caminho para imagem'

res = custom_model(imagem, conf=0.6)

res[0].show()

result = res[0]
classes_detectadas = [int(cls) for cls in result.boxes.cls.tolist()]
nomes = result.names
componentes = [nomes[cls] for cls in classes_detectadas]

componentes_unicos = list(dict.fromkeys(componentes))

print(componentes_unicos)

"""Conectando ao Gemini para gerar o relatório Stride"""

prompt = f"""
Você é um profissional expert em cyber segurança, crie um relatório seguindo a metodologia STRIDE,
o relatório deve ser criado com base nas seguintes entidades:
{componentes_unicos}.

Observações:
- Não coloque nome de empresa
- Não informe ou adicione nome de variáveis no relatório
- Inicie o relatório já escrevendo sobre ele

O padrão do relatório deve ter:
- cabeçalho
  - deve conter apenas a data em que o relatório foi gerado
- resumo
- visão geral do sistema
- análise de ameaças seguindo o padrão stride
  - nessa parte de análise, deve ter uma tabela contendo:
    - componente: nome do componente
    - ameaça: descrição da ameaça
    - categoria: categoria da metodologia stride
    - descrição: contendo uma breve descrição do ataque que pode ser provocado pelo atacante
- conclusão e recomendações.
"""

client = genai.Client(api_key="AIzaSyDkoebJF_rfYVnvJdQo1kVDv53hqKOWTis")

response = client.models.generate_content(
    model="gemini-2.5-flash",
    contents=prompt,
    config=types.GenerateContentConfig(
        thinking_config=types.ThinkingConfig(thinking_budget=0) # Disables thinking
    ),
)

def to_markdown(text: str):
    text = text.replace('•', ' *')
    return Markdown(textwrap.indent(text, '> ', predicate=lambda _: True))

to_markdown(response.text)